{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"LeetCode \u00b6 Summary \u6211\u7684 LeetCode \u5237\u9898\u8bb0\u5f55 \u76ee\u524d\u4e3b\u8981\u5237\u9898\u65b9\u5411\u4e3a \u7b97\u6cd5 \u548c shell reference \u00b6 wang - leetcode\u524d300\u9053\u9898\u8be6\u89e3","title":"LeetCode"},{"location":"#leetcode","text":"Summary \u6211\u7684 LeetCode \u5237\u9898\u8bb0\u5f55 \u76ee\u524d\u4e3b\u8981\u5237\u9898\u65b9\u5411\u4e3a \u7b97\u6cd5 \u548c shell","title":"LeetCode"},{"location":"#reference","text":"wang - leetcode\u524d300\u9053\u9898\u8be6\u89e3","title":"reference"},{"location":"about/","text":"About \u00b6 \u5f97\u76ca\u4e8e My Best Friend \u5c0f\u7530\u541b \u7684\u8bf1\u5bfc\uff0c\u55ef~\u662f\u8bf1\u5bfc\uff0c\u80af\u5b9a\u662f\u8bf1\u5bfc\uff0c\u6211\u4e5f\u5f00\u59cb\u4f7f\u7528\u4e0a\u4e86 mkdocs Installation \u00b6 mkdocs-material \u00b6 \u672c\u7ad9\u70b9\u4f7f\u7528 mkdocs-material \u90e8\u7f72\uff0c\u4f7f\u7528 pip3 \u5b89\u88c5\uff0c\u7531\u4e8e\u5b89\u88c5\u8fc7\u7a0b\u5305\u542b\u4e86 mkdocs \uff0c\u6240\u4ee5\u65e0\u9700\u5355\u72ec\u5b89\u88c5\u3002 pip3 install mkdocs-material extensions \u00b6 mkdocs-material \u5305\u542b\u5927\u91cf\u7684 extensions \uff0c\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6 mkdocs.yml \u4e2d\u542f\u7528\uff0c\u76ee\u524d\u5c1a\u672a\u5f00\u542f\u6240\u6709\u6269\u5c55\uff0c\u5b9e\u9645\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u6709\u65b0\u7684\u9700\u6c42\u518d\u53d6\u6d88\u6ce8\u91ca\u5373\u53ef\u3002 markdown_extensions: - admonition - codehilite - footnotes - meta - toc: permalink: true # - pymdownx.arithmatex - pymdownx.betterem: smart_enable: all # - pymdownx.caret # - pymdownx.critic # - pymdownx.details - pymdownx.emoji: emoji_index: !!python/name:materialx.emoji.twemoji emoji_generator: !!python/name:materialx.emoji.to_svg # - pymdownx.highlight: # linenums_style: pymdownx-inline # - pymdownx.inlinehilite # - pymdownx.keys # - pymdownx.magiclink - pymdownx.mark # - pymdownx.smartsymbols # - pymdownx.snippets: # check_paths: true - pymdownx.superfences - pymdownx.tabbed - pymdownx.tasklist: custom_checkbox: true - pymdownx.tilde plugins \u00b6 \u7ad9\u70b9\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u989d\u5916\u7684\u63d2\u4ef6\uff0c\u5176\u4e2d\u67d0\u4e9b\u63d2\u4ef6\u9700\u8981\u5355\u72ec\u5b89\u88c5 plugins search : \u641c\u7d22\u529f\u80fd\uff0c\u76ee\u524d\u8c8c\u4f3c\u4e0d\u652f\u6301\u4e2d\u6587\uff0c\u9057\u61be\ud83d\ude13 minification : \u538b\u7f29html\u6587\u4ef6 pip3 install mkdocs-minify-plugin Revision Date : \u5728\u9875\u5c3e\u663e\u793a last updated \u65f6\u95f4 pip3 install mkdocs-git-revision-date-localized-plugin Awesome pages : \u9875\u9762\u7ba1\u7406\u529f\u80fd\uff0c\u53ef\u4ee5\u5bf9\u76ee\u5f55\u4e0b\u7684\u6587\u6863\u8fdb\u884c\u6298\u53e0\u3001\u9690\u85cf\u3001\u6392\u5e8f\u7b49\u64cd\u4f5c pip3 install mkdocs-awesome-pages-plugin mkdocs \u00b6 \u5b89\u88c5\u540e\uff0c\u4f7f\u7528 mkdocs \u521b\u5efa\u6587\u6863\u76ee\u5f55\u3001\u8fd0\u884c\u672c\u5730server\u3001\u751f\u6210\u7ad9\u70b9\u6587\u4ef6\u6216\u90e8\u7f72\u81f3\u8fdc\u7a0bserver # Create docs for leetcode mkdocs new leetcode # Running server on localhost:8000 mkdocs serve # Build site mkdocs build [ --clean ] # deploy to github branch gh-pages mkdocs gh-deploy Reference \u00b6 mkdocs docs mkdocs \u4e2d\u6587\u6587\u6863 material for mkdocs PyMdown Extensions Documentation","title":"About"},{"location":"about/#about","text":"\u5f97\u76ca\u4e8e My Best Friend \u5c0f\u7530\u541b \u7684\u8bf1\u5bfc\uff0c\u55ef~\u662f\u8bf1\u5bfc\uff0c\u80af\u5b9a\u662f\u8bf1\u5bfc\uff0c\u6211\u4e5f\u5f00\u59cb\u4f7f\u7528\u4e0a\u4e86 mkdocs","title":"About"},{"location":"about/#installation","text":"","title":"Installation"},{"location":"about/#mkdocs-material","text":"\u672c\u7ad9\u70b9\u4f7f\u7528 mkdocs-material \u90e8\u7f72\uff0c\u4f7f\u7528 pip3 \u5b89\u88c5\uff0c\u7531\u4e8e\u5b89\u88c5\u8fc7\u7a0b\u5305\u542b\u4e86 mkdocs \uff0c\u6240\u4ee5\u65e0\u9700\u5355\u72ec\u5b89\u88c5\u3002 pip3 install mkdocs-material","title":"mkdocs-material"},{"location":"about/#extensions","text":"mkdocs-material \u5305\u542b\u5927\u91cf\u7684 extensions \uff0c\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6 mkdocs.yml \u4e2d\u542f\u7528\uff0c\u76ee\u524d\u5c1a\u672a\u5f00\u542f\u6240\u6709\u6269\u5c55\uff0c\u5b9e\u9645\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u6709\u65b0\u7684\u9700\u6c42\u518d\u53d6\u6d88\u6ce8\u91ca\u5373\u53ef\u3002 markdown_extensions: - admonition - codehilite - footnotes - meta - toc: permalink: true # - pymdownx.arithmatex - pymdownx.betterem: smart_enable: all # - pymdownx.caret # - pymdownx.critic # - pymdownx.details - pymdownx.emoji: emoji_index: !!python/name:materialx.emoji.twemoji emoji_generator: !!python/name:materialx.emoji.to_svg # - pymdownx.highlight: # linenums_style: pymdownx-inline # - pymdownx.inlinehilite # - pymdownx.keys # - pymdownx.magiclink - pymdownx.mark # - pymdownx.smartsymbols # - pymdownx.snippets: # check_paths: true - pymdownx.superfences - pymdownx.tabbed - pymdownx.tasklist: custom_checkbox: true - pymdownx.tilde","title":"extensions"},{"location":"about/#plugins","text":"\u7ad9\u70b9\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u989d\u5916\u7684\u63d2\u4ef6\uff0c\u5176\u4e2d\u67d0\u4e9b\u63d2\u4ef6\u9700\u8981\u5355\u72ec\u5b89\u88c5 plugins search : \u641c\u7d22\u529f\u80fd\uff0c\u76ee\u524d\u8c8c\u4f3c\u4e0d\u652f\u6301\u4e2d\u6587\uff0c\u9057\u61be\ud83d\ude13 minification : \u538b\u7f29html\u6587\u4ef6 pip3 install mkdocs-minify-plugin Revision Date : \u5728\u9875\u5c3e\u663e\u793a last updated \u65f6\u95f4 pip3 install mkdocs-git-revision-date-localized-plugin Awesome pages : \u9875\u9762\u7ba1\u7406\u529f\u80fd\uff0c\u53ef\u4ee5\u5bf9\u76ee\u5f55\u4e0b\u7684\u6587\u6863\u8fdb\u884c\u6298\u53e0\u3001\u9690\u85cf\u3001\u6392\u5e8f\u7b49\u64cd\u4f5c pip3 install mkdocs-awesome-pages-plugin","title":"plugins"},{"location":"about/#mkdocs","text":"\u5b89\u88c5\u540e\uff0c\u4f7f\u7528 mkdocs \u521b\u5efa\u6587\u6863\u76ee\u5f55\u3001\u8fd0\u884c\u672c\u5730server\u3001\u751f\u6210\u7ad9\u70b9\u6587\u4ef6\u6216\u90e8\u7f72\u81f3\u8fdc\u7a0bserver # Create docs for leetcode mkdocs new leetcode # Running server on localhost:8000 mkdocs serve # Build site mkdocs build [ --clean ] # deploy to github branch gh-pages mkdocs gh-deploy","title":"mkdocs"},{"location":"about/#reference","text":"mkdocs docs mkdocs \u4e2d\u6587\u6587\u6863 material for mkdocs PyMdown Extensions Documentation","title":"Reference"},{"location":"algorithm/1.two-sum/","text":"\u4e24\u6570\u4e4b\u548c \u00b6","title":"1.\u4e24\u6570\u4e4b\u548c"},{"location":"algorithm/1.two-sum/#_1","text":"","title":"\u4e24\u6570\u4e4b\u548c"},{"location":"shell/192.word-frequency/","text":"\u7edf\u8ba1\u8bcd\u9891 \u00b6 \u96be\u5ea6 \uff1a\u4e2d\u7b49 \u94fe\u63a5 \uff1a https://leetcode-cn.com/problems/word-frequency \u63cf\u8ff0 \u00b6 \u5199\u4e00\u4e2a bash \u811a\u672c\u4ee5\u7edf\u8ba1\u4e00\u4e2a\u6587\u672c\u6587\u4ef6 words.txt \u4e2d\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u9891\u7387\u3002 \u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u4f60\u53ef\u4ee5\u5047\u8bbe\uff1a words.txt\u53ea\u5305\u62ec\u5c0f\u5199\u5b57\u6bcd\u548c ' ' \u3002 \u6bcf\u4e2a\u5355\u8bcd\u53ea\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002 \u5355\u8bcd\u95f4\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u7a7a\u683c\u5b57\u7b26\u5206\u9694\u3002 \u793a\u4f8b \u8f93\u5165\uff1awords.txt the day is sunny the the the sunny is is \u8f93\u51fa:\uff08\u4ee5\u8bcd\u9891\u964d\u5e8f\u6392\u5217\uff09 the 4 is 3 sunny 2 day 1 \u8bf4\u660e \u4e0d\u8981\u62c5\u5fc3\u8bcd\u9891\u76f8\u540c\u7684\u5355\u8bcd\u7684\u6392\u5e8f\u95ee\u9898\uff0c\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u9891\u7387\u90fd\u662f\u552f\u4e00\u7684\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528\u4e00\u884c Unix pipes \u5b9e\u73b0\u5417\uff1f \u9898\u89e3 \u00b6 \u5206\u6790 \u00b6 \u89e3\u9898\u601d\u8def\u5982\u4e0b\uff1a \u9996\u5148\u5c06\u6240\u6709\u5355\u8bcd\u72ec\u7acb\u51fa\u6765 \u7136\u540e\u5bf9\u6240\u6709\u5355\u8bcd\u8fdb\u884c\u6392\u5e8f\uff0c\u5e76\u751f\u6210\u5355\u8bcd\u96c6\u5408\uff08\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u4e00\u6b21\uff09 \u904d\u5386\u5355\u8bcd\u96c6\u5408\uff0c\u5bf9\u6bcf\u4e2a\u5355\u8bcd\u8ba1\u6570\uff0c\u5e76\u4e14\u5c06\u5355\u8bcd\u548c\u5bf9\u5e94\u7684\u8ba1\u6570\u503c\uff08\u5982 the 4 \uff09\u4fdd\u5b58\u5230\u4e00\u4e2a\u53d8\u91cf\u4e2d\uff0c\u6bcf\u4e2a\u5355\u8bcd\u76f4\u63a5\u4f7f\u7528 \\n \u5206\u9694 \u5c06\u5f97\u5230\u7684\u53d8\u91cf\u5b89\u88c5\u7b2c\u4e8c\u5217\u9006\u5e8f\u6392\u5e8f\u540e\u8f93\u51fa \u5b9e\u73b0 \u00b6 \u5bf9\u4e8e\u7b2c\u4e00\u6b65\uff0c\u5c06\u6587\u4ef6\u4e2d\u7684\u5355\u8bcd\u72ec\u7acb\u51fa\u6765\uff0c\u53ef\u4ee5\u4f7f\u7528sed\u5c06\u6587\u4ef6\u4e2d\u7684\u7a7a\u683c\u90fd\u66ff\u6362\u6210\u6362\u884c\uff1b \u901a\u8fc7 sort \u548c uniq \u751f\u6210\u5355\u8bcd\u96c6\u5408\uff0c\u5b8c\u6210\u7b2c\u4e8c\u6b65\uff1b for\u5faa\u73af\u904d\u5386\u96c6\u5408\uff0c grep -Ewo \u7ed3\u5408 wc -l \u5f97\u5230\u6bcf\u4e2a\u5355\u8bcd\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5c06\u5355\u8bcd\u548c\u8ba1\u6570\u4fe1\u606f\u5408\u5e76\u5230\u4e00\u4e2a\u53d8\u91cf \u4f7f\u7528 sort --key=2 -reverse -n \u5bf9\u53d8\u91cf\u6309\u8ba1\u6570\u503c\u9006\u5e8f\u6392\u5e8f\uff0c\u6253\u5370\u8f93\u51fa # Read from the file words.txt and output the word frequency list to stdout. # \u83b7\u53d6\u5355\u8bcd\u96c6\u5408 uniq_words = $( sed -E 's/\\ +/\\n/g' words.txt | sort | uniq ) res = \"\" # \u8ba1\u7b97\u6bcf\u4e2a\u5355\u8bcd\u7684\u51fa\u73b0\u6b21\u6570 for word in $uniq_words do count = $( grep -Ewo $word words.txt | wc -l ) res = \" ${ res }${ word } $count \\n\" done # \u6309\u7167\u5355\u8bcd\u9891\u6b21\u9006\u5e8f\u6392\u5e8f echo -en \" $res \" | sort --key = 2 --reverse -n sort \u957f\u53c2\u6570 sort --reverse -n \u53ef\u4ee5\u5408\u5e76\u4e3a sort -rn sort \u67d0\u4e9b\u957f\u53c2\u6570\u5728 LeetCode \u662f\u4e0d\u5305\u542b\u7684\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519 \u4f18\u5316 \u00b6 \u4ee5\u4e0a\u89e3\u6cd5\u663e\u7136\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u4f18\u5316\uff0c\u601d\u8003\u4e0b\u83b7\u53d6\u5355\u8bcd\u96c6\u5408\u7684\u65b9\u6cd5\u3002 \u4f7f\u7528 cat \u548c xargs , \u5c06\u6bcf\u4e2a\u5355\u8bcd\u90fd\u5f53\u505a\u4e00\u4e2a\u53c2\u6570\u770b\u5f85\uff0c\u53ef\u4ee5\u7528\u4ee5\u4e0b\u65b9\u5f0f\u5f97\u5230\u96c6\u5408\u3002 uniq_words = $( cat words.txt | xargs -n 1 | uniq ) \u8fd9\u662f\u5176\u4e00\uff0c\u5176\u4e8c\u662f\u6253\u5370\u8f93\u51fa\u65f6\u7684\u6392\u5e8f\uff0c\u5982\u679c\u4e0d\u4f7f\u7528 sort \u7684 --key \u53c2\u6570\u8be5\u600e\u4e48\u5b9e\u73b0\u5462\uff0c\u53ef\u4ee5\u5728\u5408\u5e76\u5355\u8bcd\u548c\u8ba1\u6570\u503c\u65f6\u5148\u7528\u8ba1\u6570\u503c\u5728\u524d\u7684\u65b9\u5f0f\u5b58\u50a8\uff0c\u7136\u540e\u76f4\u63a5 sort -rn \u6392\u5e8f\uff0c\u6700\u540e\u901a\u8fc7 awk \u8c03\u6362\u8f93\u51fa\u987a\u5e8f\u3002 \u4f18\u5316\u540e\u7684\u7a0b\u5e8f\u5982\u4e0b\uff1a # Read from the file words.txt and output the word frequency list to stdout. # \u83b7\u53d6\u5355\u8bcd\u96c6\u5408 uniq_words = $( cat words.txt | xargs -n 1 | uniq ) res = \"\" # \u8ba1\u7b97\u6bcf\u4e2a\u5355\u8bcd\u7684\u51fa\u73b0\u6b21\u6570 for word in $uniq_words do count = $( grep -Ewo $word words.txt | wc -l ) res = \" ${ res }${ count } $word \\n\" done # \u6309\u7167\u5355\u8bcd\u9891\u6b21\u9006\u5e8f\u6392\u5e8f echo -en \" $res \" | sort -rn | awk '{print $2\" \"$1}' \u518d\u4f18\u5316 \u00b6 \u6700\u540e\u518d\u60f3\u60f3\u8fd8\u80fd\u600e\u4e48\u4f18\u5316\uff0c\u6309\u7167\u9898\u76ee\u7684\u8bf4\u660e\u4fe1\u606f\u53ef\u77e5\uff0c\u80af\u5b9a\u6709\u65b9\u6cd5\u53ef\u4ee5\u4e00\u884c\u641e\u5b9a\uff0c\u90a3\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u770b\u4e86\u522b\u4eba\u7684\u8ba8\u8bba\u53d1\u73b0\uff0c\u6211\u5ffd\u7565\u4e86 uniq \u7684\u5f3a\u6709\u529b\u53c2\u6570 -c \uff0c\u6ca1\u9519\uff0c uniq -c \u672c\u8eab\u5c31\u53ef\u4ee5\u8ba1\u6570\uff0c\u5e76\u4e14\u9ed8\u8ba4\u8f93\u51fa\u65f6\u5c06\u8ba1\u6570\u503c\u653e\u5728\u5b57\u7b26\u4e32\u4e4b\u524d\uff0c\u4ee5 tab \u5206\u9694\uff0c\u5982 4 the . OK, \u6709\u4e86\u8fd9\u4e2a\u5c31\u597d\u529e\u4e86\uff0c\u6839\u672c\u65e0\u9700\u5faa\u73af\u904d\u5386\uff0c\u76f4\u63a5\u4e00\u6b65\u5230\u4f4d\uff0c\u5b8c\u7f8e\u3002 # Read from the file words.txt and output the word frequency list to stdout. cat words.txt | xargs -n 1 | sort | uniq -c | sort -rn | awk '{print $2\" \"$1}' \u4f46\u662f\u5b9e\u8df5\u8bc1\u660e\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5e76\u4e0d\u662f\u6700\u9ad8\u6548\u7684\uff0c\u4f46\u786e\u5b9e\u662f\u6700\u7b80\u6d01\u7684\u3002 \u5c0f\u7ed3 \u00b6 xargs \u6709\u65f6\u5019\u771f\u7684\u6709\u5999\u7528\uff0c\u53ef\u4ee5\u628a\u5355\u8bcd\u53d8\u6210\u53c2\u6570\uff1b\u8fd8\u6709 uniq -c \uff0c\u610f\u60f3\u4e0d\u5230\u7684\u5de7\u5999\uff1b\u6700\u540e\u52a0\u4e0a awk \u7684\u683c\u5f0f\u5316\u8f93\u51fa\uff0c\u679c\u7136\u56e2\u7ed3\u5c31\u662f\u529b\u91cf~","title":"192.\u7edf\u8ba1\u8bcd\u9891"},{"location":"shell/192.word-frequency/#_1","text":"\u96be\u5ea6 \uff1a\u4e2d\u7b49 \u94fe\u63a5 \uff1a https://leetcode-cn.com/problems/word-frequency","title":"\u7edf\u8ba1\u8bcd\u9891"},{"location":"shell/192.word-frequency/#_2","text":"\u5199\u4e00\u4e2a bash \u811a\u672c\u4ee5\u7edf\u8ba1\u4e00\u4e2a\u6587\u672c\u6587\u4ef6 words.txt \u4e2d\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u9891\u7387\u3002 \u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u4f60\u53ef\u4ee5\u5047\u8bbe\uff1a words.txt\u53ea\u5305\u62ec\u5c0f\u5199\u5b57\u6bcd\u548c ' ' \u3002 \u6bcf\u4e2a\u5355\u8bcd\u53ea\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002 \u5355\u8bcd\u95f4\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u7a7a\u683c\u5b57\u7b26\u5206\u9694\u3002 \u793a\u4f8b \u8f93\u5165\uff1awords.txt the day is sunny the the the sunny is is \u8f93\u51fa:\uff08\u4ee5\u8bcd\u9891\u964d\u5e8f\u6392\u5217\uff09 the 4 is 3 sunny 2 day 1 \u8bf4\u660e \u4e0d\u8981\u62c5\u5fc3\u8bcd\u9891\u76f8\u540c\u7684\u5355\u8bcd\u7684\u6392\u5e8f\u95ee\u9898\uff0c\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u9891\u7387\u90fd\u662f\u552f\u4e00\u7684\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528\u4e00\u884c Unix pipes \u5b9e\u73b0\u5417\uff1f","title":"\u63cf\u8ff0"},{"location":"shell/192.word-frequency/#_3","text":"","title":"\u9898\u89e3"},{"location":"shell/192.word-frequency/#_4","text":"\u89e3\u9898\u601d\u8def\u5982\u4e0b\uff1a \u9996\u5148\u5c06\u6240\u6709\u5355\u8bcd\u72ec\u7acb\u51fa\u6765 \u7136\u540e\u5bf9\u6240\u6709\u5355\u8bcd\u8fdb\u884c\u6392\u5e8f\uff0c\u5e76\u751f\u6210\u5355\u8bcd\u96c6\u5408\uff08\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u4e00\u6b21\uff09 \u904d\u5386\u5355\u8bcd\u96c6\u5408\uff0c\u5bf9\u6bcf\u4e2a\u5355\u8bcd\u8ba1\u6570\uff0c\u5e76\u4e14\u5c06\u5355\u8bcd\u548c\u5bf9\u5e94\u7684\u8ba1\u6570\u503c\uff08\u5982 the 4 \uff09\u4fdd\u5b58\u5230\u4e00\u4e2a\u53d8\u91cf\u4e2d\uff0c\u6bcf\u4e2a\u5355\u8bcd\u76f4\u63a5\u4f7f\u7528 \\n \u5206\u9694 \u5c06\u5f97\u5230\u7684\u53d8\u91cf\u5b89\u88c5\u7b2c\u4e8c\u5217\u9006\u5e8f\u6392\u5e8f\u540e\u8f93\u51fa","title":"\u5206\u6790"},{"location":"shell/192.word-frequency/#_5","text":"\u5bf9\u4e8e\u7b2c\u4e00\u6b65\uff0c\u5c06\u6587\u4ef6\u4e2d\u7684\u5355\u8bcd\u72ec\u7acb\u51fa\u6765\uff0c\u53ef\u4ee5\u4f7f\u7528sed\u5c06\u6587\u4ef6\u4e2d\u7684\u7a7a\u683c\u90fd\u66ff\u6362\u6210\u6362\u884c\uff1b \u901a\u8fc7 sort \u548c uniq \u751f\u6210\u5355\u8bcd\u96c6\u5408\uff0c\u5b8c\u6210\u7b2c\u4e8c\u6b65\uff1b for\u5faa\u73af\u904d\u5386\u96c6\u5408\uff0c grep -Ewo \u7ed3\u5408 wc -l \u5f97\u5230\u6bcf\u4e2a\u5355\u8bcd\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5c06\u5355\u8bcd\u548c\u8ba1\u6570\u4fe1\u606f\u5408\u5e76\u5230\u4e00\u4e2a\u53d8\u91cf \u4f7f\u7528 sort --key=2 -reverse -n \u5bf9\u53d8\u91cf\u6309\u8ba1\u6570\u503c\u9006\u5e8f\u6392\u5e8f\uff0c\u6253\u5370\u8f93\u51fa # Read from the file words.txt and output the word frequency list to stdout. # \u83b7\u53d6\u5355\u8bcd\u96c6\u5408 uniq_words = $( sed -E 's/\\ +/\\n/g' words.txt | sort | uniq ) res = \"\" # \u8ba1\u7b97\u6bcf\u4e2a\u5355\u8bcd\u7684\u51fa\u73b0\u6b21\u6570 for word in $uniq_words do count = $( grep -Ewo $word words.txt | wc -l ) res = \" ${ res }${ word } $count \\n\" done # \u6309\u7167\u5355\u8bcd\u9891\u6b21\u9006\u5e8f\u6392\u5e8f echo -en \" $res \" | sort --key = 2 --reverse -n sort \u957f\u53c2\u6570 sort --reverse -n \u53ef\u4ee5\u5408\u5e76\u4e3a sort -rn sort \u67d0\u4e9b\u957f\u53c2\u6570\u5728 LeetCode \u662f\u4e0d\u5305\u542b\u7684\uff0c\u4f7f\u7528\u540e\u4f1a\u62a5\u9519","title":"\u5b9e\u73b0"},{"location":"shell/192.word-frequency/#_6","text":"\u4ee5\u4e0a\u89e3\u6cd5\u663e\u7136\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u4f18\u5316\uff0c\u601d\u8003\u4e0b\u83b7\u53d6\u5355\u8bcd\u96c6\u5408\u7684\u65b9\u6cd5\u3002 \u4f7f\u7528 cat \u548c xargs , \u5c06\u6bcf\u4e2a\u5355\u8bcd\u90fd\u5f53\u505a\u4e00\u4e2a\u53c2\u6570\u770b\u5f85\uff0c\u53ef\u4ee5\u7528\u4ee5\u4e0b\u65b9\u5f0f\u5f97\u5230\u96c6\u5408\u3002 uniq_words = $( cat words.txt | xargs -n 1 | uniq ) \u8fd9\u662f\u5176\u4e00\uff0c\u5176\u4e8c\u662f\u6253\u5370\u8f93\u51fa\u65f6\u7684\u6392\u5e8f\uff0c\u5982\u679c\u4e0d\u4f7f\u7528 sort \u7684 --key \u53c2\u6570\u8be5\u600e\u4e48\u5b9e\u73b0\u5462\uff0c\u53ef\u4ee5\u5728\u5408\u5e76\u5355\u8bcd\u548c\u8ba1\u6570\u503c\u65f6\u5148\u7528\u8ba1\u6570\u503c\u5728\u524d\u7684\u65b9\u5f0f\u5b58\u50a8\uff0c\u7136\u540e\u76f4\u63a5 sort -rn \u6392\u5e8f\uff0c\u6700\u540e\u901a\u8fc7 awk \u8c03\u6362\u8f93\u51fa\u987a\u5e8f\u3002 \u4f18\u5316\u540e\u7684\u7a0b\u5e8f\u5982\u4e0b\uff1a # Read from the file words.txt and output the word frequency list to stdout. # \u83b7\u53d6\u5355\u8bcd\u96c6\u5408 uniq_words = $( cat words.txt | xargs -n 1 | uniq ) res = \"\" # \u8ba1\u7b97\u6bcf\u4e2a\u5355\u8bcd\u7684\u51fa\u73b0\u6b21\u6570 for word in $uniq_words do count = $( grep -Ewo $word words.txt | wc -l ) res = \" ${ res }${ count } $word \\n\" done # \u6309\u7167\u5355\u8bcd\u9891\u6b21\u9006\u5e8f\u6392\u5e8f echo -en \" $res \" | sort -rn | awk '{print $2\" \"$1}'","title":"\u4f18\u5316"},{"location":"shell/192.word-frequency/#_7","text":"\u6700\u540e\u518d\u60f3\u60f3\u8fd8\u80fd\u600e\u4e48\u4f18\u5316\uff0c\u6309\u7167\u9898\u76ee\u7684\u8bf4\u660e\u4fe1\u606f\u53ef\u77e5\uff0c\u80af\u5b9a\u6709\u65b9\u6cd5\u53ef\u4ee5\u4e00\u884c\u641e\u5b9a\uff0c\u90a3\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u770b\u4e86\u522b\u4eba\u7684\u8ba8\u8bba\u53d1\u73b0\uff0c\u6211\u5ffd\u7565\u4e86 uniq \u7684\u5f3a\u6709\u529b\u53c2\u6570 -c \uff0c\u6ca1\u9519\uff0c uniq -c \u672c\u8eab\u5c31\u53ef\u4ee5\u8ba1\u6570\uff0c\u5e76\u4e14\u9ed8\u8ba4\u8f93\u51fa\u65f6\u5c06\u8ba1\u6570\u503c\u653e\u5728\u5b57\u7b26\u4e32\u4e4b\u524d\uff0c\u4ee5 tab \u5206\u9694\uff0c\u5982 4 the . OK, \u6709\u4e86\u8fd9\u4e2a\u5c31\u597d\u529e\u4e86\uff0c\u6839\u672c\u65e0\u9700\u5faa\u73af\u904d\u5386\uff0c\u76f4\u63a5\u4e00\u6b65\u5230\u4f4d\uff0c\u5b8c\u7f8e\u3002 # Read from the file words.txt and output the word frequency list to stdout. cat words.txt | xargs -n 1 | sort | uniq -c | sort -rn | awk '{print $2\" \"$1}' \u4f46\u662f\u5b9e\u8df5\u8bc1\u660e\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5e76\u4e0d\u662f\u6700\u9ad8\u6548\u7684\uff0c\u4f46\u786e\u5b9e\u662f\u6700\u7b80\u6d01\u7684\u3002","title":"\u518d\u4f18\u5316"},{"location":"shell/192.word-frequency/#_8","text":"xargs \u6709\u65f6\u5019\u771f\u7684\u6709\u5999\u7528\uff0c\u53ef\u4ee5\u628a\u5355\u8bcd\u53d8\u6210\u53c2\u6570\uff1b\u8fd8\u6709 uniq -c \uff0c\u610f\u60f3\u4e0d\u5230\u7684\u5de7\u5999\uff1b\u6700\u540e\u52a0\u4e0a awk \u7684\u683c\u5f0f\u5316\u8f93\u51fa\uff0c\u679c\u7136\u56e2\u7ed3\u5c31\u662f\u529b\u91cf~","title":"\u5c0f\u7ed3"},{"location":"shell/193.valid-phone-numbers/","text":"\u6709\u6548\u7535\u8bdd\u53f7\u7801 \u00b6 \u96be\u5ea6 \uff1a\u7b80\u5355 \u94fe\u63a5 \uff1a https://leetcode-cn.com/problems/valid-phone-numbers \u63cf\u8ff0 \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u7535\u8bdd\u53f7\u7801\u5217\u8868\uff08\u4e00\u884c\u4e00\u4e2a\u7535\u8bdd\u53f7\u7801\uff09\u7684\u6587\u672c\u6587\u4ef6 file.txt\uff0c\u5199\u4e00\u4e2a bash \u811a\u672c\u8f93\u51fa\u6240\u6709\u6709\u6548\u7684\u7535\u8bdd\u53f7\u7801\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u4e00\u4e2a\u6709\u6548\u7684\u7535\u8bdd\u53f7\u7801\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u79cd\u683c\u5f0f\uff1a (xxx) xxx-xxxx \u6216 xxx-xxx-xxxx\u3002\uff08x \u8868\u793a\u4e00\u4e2a\u6570\u5b57\uff09 \u4f60\u4e5f\u53ef\u4ee5\u5047\u8bbe\u6bcf\u884c\u524d\u540e\u6ca1\u6709\u591a\u4f59\u7684\u7a7a\u683c\u5b57\u7b26\u3002 \u793a\u4f8b \u8f93\u5165 \uff1afile.txt 987-123-4567 123 456 7890 (123) 456-7890 \u8f93\u51fa \uff1a\u6709\u6548\u7684\u7535\u8bdd\u53f7\u7801 987-123-4567 (123) 456-7890 \u9898\u89e3 \u00b6 \u5206\u6790 \u00b6 \u8fd9\u662f\u4e00\u9053\u7b80\u5355\u7684\u6b63\u5219\u5339\u914d\u9898\uff0c\u6709\u6548\u53f7\u7801\u542b\u4e24\u79cd\u60c5\u51b5 xxx-xxx-xxxx (xxx) xxx-xxxx x \u4e3a\u4e00\u4e2a\u6570\u5b57\uff0c\u5355\u72ec\u5339\u914d\u4e24\u79cd\u60c5\u51b5 ^[0-9]{3}-[0-9]{3}-[0-9]{4}$ ^\\([0-9]{9}\\) [0-9]{3}-[0-9]{4}$ \u90a3\u4e48\u8981\u5305\u542b\u4e24\u79cd\u60c5\u51b5\uff0c\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u4f7f\u7528 | \u8fde\u63a5\u4e24\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f ^[0-9]{3}-[0-9]{3}-[0-9]{4}$|^\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}$ \u4f46\u662f\u663e\u5f97\u6709\u70b9\u5197\u957f\uff0c\u53ef\u4ee5\u628a\u91cd\u590d\u90e8\u5206\u63d0\u53d6\u51fa\u6765\uff0c\u4ec5\u4ec5\u5bf9\u4e0d\u4e00\u81f4\u7684\u524d\u534a\u90e8\u5206\u8fdb\u884c | \u5339\u914d ^([0-9]{3}-|\\([0-9]{3}\\) )[0-9]{3}-[0-9]{4}$ \u8f6c\u4e49 \u6ce8\u610f\u53f7\u7801\u4fe1\u606f\u4e2d\u7684\u62ec\u53f7 () \u9700\u8981\u901a\u8fc7\u8f6c\u4e49\u7b26 \\ \u8fdb\u884c\u8f6c\u4e49 \u5b9e\u73b0 \u00b6 grep \u00b6 #!/bin/bash # Read from the file file.txt and output all valid phone numbers to stdout. grep -E '^[0-9]{3}-[0-9]{3}-[0-9]{4}$|^\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}$' file.txt \u4f7f\u7528\u5408\u5e76\u4f18\u5316\u540e\u7684\u6b63\u5219\u8868\u8fbe\u5f0f #!/bin/bash # Read from the file file.txt and output all valid phone numbers to stdout. grep -E '^([0-9]{3}-|\\([0-9]{3}\\) )[0-9]{3}-[0-9]{4}$' file.txt \u5230\u8fd9\u5176\u5b9e\u8fd8\u53ef\u4ee5\u518d\u7b80\u5316\uff0c\u628a [0-9] \u7528 \\d \u66ff\u6362\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981\u4f7f\u7528 Perl \u811a\u672c\u8bed\u8a00\u7684\u683c\u5f0f\uff0c\u6240\u4ee5\u9700\u8981 -P \u53c2\u6570\u3002 grep -P '^(\\d{3}-|\\(\\d{3}\\) )\\d{3}-\\d{4}$' file.txt awk & sed \u00b6 \u9664\u4e86grep, awk \u548c sed \u540c\u6837\u53ef\u4ee5\u5b8c\u6210\u4efb\u52a1\uff0c\u4f7f\u7528\u540c\u6837\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u53ea\u662f\u6253\u5370\u8f93\u51fa\u7684\u8bed\u6cd5\u7a0d\u6709\u4e0d\u540c\u3002 sed -rn '/^([0-9]{3}-|\\([0-9]{3}\\) )[0-9]{3}-[0-9]{4}$/p' file.txt awk '/^([0-9]{3}-|\\([0-9]{3}\\) )[0-9]{3}-([0-9]{4})$/' file.txt \u5c0f\u7ed3 \u00b6 \u64c5\u7528 grep , sed \u548c awk \u53ef\u4ee5\u89e3\u51b3\u5f88\u591a\u6587\u672c\u7f16\u8f91\u95ee\u9898\u3002\u4e0d\u8fc7\u5173\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4e0d\u7528\u7684\u5de5\u5177\u6216\u8005\u7f16\u7a0b\u8bed\u8a00\u6240\u7528\u6807\u51c6\u6216\u6709\u4e0d\u540c\uff0c\u9700\u8981\u6ce8\u610f\u4e0b\u3002 reference \u00b6 W3C - \u6b63\u5219\u8868\u8fbe\u5f0f","title":"193.\u6709\u6548\u7535\u8bdd\u53f7\u7801"},{"location":"shell/193.valid-phone-numbers/#_1","text":"\u96be\u5ea6 \uff1a\u7b80\u5355 \u94fe\u63a5 \uff1a https://leetcode-cn.com/problems/valid-phone-numbers","title":"\u6709\u6548\u7535\u8bdd\u53f7\u7801"},{"location":"shell/193.valid-phone-numbers/#_2","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u7535\u8bdd\u53f7\u7801\u5217\u8868\uff08\u4e00\u884c\u4e00\u4e2a\u7535\u8bdd\u53f7\u7801\uff09\u7684\u6587\u672c\u6587\u4ef6 file.txt\uff0c\u5199\u4e00\u4e2a bash \u811a\u672c\u8f93\u51fa\u6240\u6709\u6709\u6548\u7684\u7535\u8bdd\u53f7\u7801\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u4e00\u4e2a\u6709\u6548\u7684\u7535\u8bdd\u53f7\u7801\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u79cd\u683c\u5f0f\uff1a (xxx) xxx-xxxx \u6216 xxx-xxx-xxxx\u3002\uff08x \u8868\u793a\u4e00\u4e2a\u6570\u5b57\uff09 \u4f60\u4e5f\u53ef\u4ee5\u5047\u8bbe\u6bcf\u884c\u524d\u540e\u6ca1\u6709\u591a\u4f59\u7684\u7a7a\u683c\u5b57\u7b26\u3002 \u793a\u4f8b \u8f93\u5165 \uff1afile.txt 987-123-4567 123 456 7890 (123) 456-7890 \u8f93\u51fa \uff1a\u6709\u6548\u7684\u7535\u8bdd\u53f7\u7801 987-123-4567 (123) 456-7890","title":"\u63cf\u8ff0"},{"location":"shell/193.valid-phone-numbers/#_3","text":"","title":"\u9898\u89e3"},{"location":"shell/193.valid-phone-numbers/#_4","text":"\u8fd9\u662f\u4e00\u9053\u7b80\u5355\u7684\u6b63\u5219\u5339\u914d\u9898\uff0c\u6709\u6548\u53f7\u7801\u542b\u4e24\u79cd\u60c5\u51b5 xxx-xxx-xxxx (xxx) xxx-xxxx x \u4e3a\u4e00\u4e2a\u6570\u5b57\uff0c\u5355\u72ec\u5339\u914d\u4e24\u79cd\u60c5\u51b5 ^[0-9]{3}-[0-9]{3}-[0-9]{4}$ ^\\([0-9]{9}\\) [0-9]{3}-[0-9]{4}$ \u90a3\u4e48\u8981\u5305\u542b\u4e24\u79cd\u60c5\u51b5\uff0c\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u4f7f\u7528 | \u8fde\u63a5\u4e24\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f ^[0-9]{3}-[0-9]{3}-[0-9]{4}$|^\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}$ \u4f46\u662f\u663e\u5f97\u6709\u70b9\u5197\u957f\uff0c\u53ef\u4ee5\u628a\u91cd\u590d\u90e8\u5206\u63d0\u53d6\u51fa\u6765\uff0c\u4ec5\u4ec5\u5bf9\u4e0d\u4e00\u81f4\u7684\u524d\u534a\u90e8\u5206\u8fdb\u884c | \u5339\u914d ^([0-9]{3}-|\\([0-9]{3}\\) )[0-9]{3}-[0-9]{4}$ \u8f6c\u4e49 \u6ce8\u610f\u53f7\u7801\u4fe1\u606f\u4e2d\u7684\u62ec\u53f7 () \u9700\u8981\u901a\u8fc7\u8f6c\u4e49\u7b26 \\ \u8fdb\u884c\u8f6c\u4e49","title":"\u5206\u6790"},{"location":"shell/193.valid-phone-numbers/#_5","text":"","title":"\u5b9e\u73b0"},{"location":"shell/193.valid-phone-numbers/#grep","text":"#!/bin/bash # Read from the file file.txt and output all valid phone numbers to stdout. grep -E '^[0-9]{3}-[0-9]{3}-[0-9]{4}$|^\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}$' file.txt \u4f7f\u7528\u5408\u5e76\u4f18\u5316\u540e\u7684\u6b63\u5219\u8868\u8fbe\u5f0f #!/bin/bash # Read from the file file.txt and output all valid phone numbers to stdout. grep -E '^([0-9]{3}-|\\([0-9]{3}\\) )[0-9]{3}-[0-9]{4}$' file.txt \u5230\u8fd9\u5176\u5b9e\u8fd8\u53ef\u4ee5\u518d\u7b80\u5316\uff0c\u628a [0-9] \u7528 \\d \u66ff\u6362\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981\u4f7f\u7528 Perl \u811a\u672c\u8bed\u8a00\u7684\u683c\u5f0f\uff0c\u6240\u4ee5\u9700\u8981 -P \u53c2\u6570\u3002 grep -P '^(\\d{3}-|\\(\\d{3}\\) )\\d{3}-\\d{4}$' file.txt","title":"grep"},{"location":"shell/193.valid-phone-numbers/#awk-sed","text":"\u9664\u4e86grep, awk \u548c sed \u540c\u6837\u53ef\u4ee5\u5b8c\u6210\u4efb\u52a1\uff0c\u4f7f\u7528\u540c\u6837\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u53ea\u662f\u6253\u5370\u8f93\u51fa\u7684\u8bed\u6cd5\u7a0d\u6709\u4e0d\u540c\u3002 sed -rn '/^([0-9]{3}-|\\([0-9]{3}\\) )[0-9]{3}-[0-9]{4}$/p' file.txt awk '/^([0-9]{3}-|\\([0-9]{3}\\) )[0-9]{3}-([0-9]{4})$/' file.txt","title":"awk &amp; sed"},{"location":"shell/193.valid-phone-numbers/#_6","text":"\u64c5\u7528 grep , sed \u548c awk \u53ef\u4ee5\u89e3\u51b3\u5f88\u591a\u6587\u672c\u7f16\u8f91\u95ee\u9898\u3002\u4e0d\u8fc7\u5173\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4e0d\u7528\u7684\u5de5\u5177\u6216\u8005\u7f16\u7a0b\u8bed\u8a00\u6240\u7528\u6807\u51c6\u6216\u6709\u4e0d\u540c\uff0c\u9700\u8981\u6ce8\u610f\u4e0b\u3002","title":"\u5c0f\u7ed3"},{"location":"shell/193.valid-phone-numbers/#reference","text":"W3C - \u6b63\u5219\u8868\u8fbe\u5f0f","title":"reference"},{"location":"shell/195.tenth-line/","text":"\u7b2c\u5341\u884c \u00b6 \u96be\u5ea6 \uff1a\u7b80\u5355 \u94fe\u63a5 \uff1a https://leetcode-cn.com/problems/tenth-line \u63cf\u8ff0 \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u6587\u672c\u6587\u4ef6 file.txt\uff0c\u8bf7\u53ea\u6253\u5370\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u7684\u7b2c\u5341\u884c\u3002 \u793a\u4f8b \u8f93\u5165 : file.txt Line 1 Line 2 Line 3 Line 4 Line 5 Line 6 Line 7 Line 8 Line 9 Line 10 \u8f93\u51fa : \u6253\u5370\u7b2c10\u884c Line 10 \u9898\u89e3 \u00b6 \u8fd9\u9053\u9898\u975e\u5e38\u7b80\u5355\uff0c\u4f7f\u7528\u5f88\u591a\u65b9\u6cd5\u90fd\u53ef\u4ee5\u89e3\u51b3\uff0c\u4e0b\u9762\u4ecb\u7ecd\u51e0\u79cd\u5e38\u7528\u65b9\u6cd5\u3002 sed \u00b6 \u6211\u7684\u7b2c\u4e00\u4e2a\u63d0\u4ea4\u4f7f\u7528\u7684\u662f sed # Read from the file file.txt and output the tenth line to stdout. sed -n 10p file.txt -n \u8868\u793a\u53ea\u6253\u5370\u5339\u914d\u4fe1\u606f\uff0c 10p \u8868\u793a\u7b2c10\u884c\u3002 awk \u00b6 \u4f7f\u7528 awk \u4e5f\u5f88\u5feb\u6377\uff0cNR - The total number of input records seen so far, \u5bf9\u5e94\u7684\u662f\u8f93\u5165\u6570\u636e\u7684\u7b2cN\u6761\u6570\u636e\uff0c\u89e3\u9898\u5982\u4e0b # Read from the file file.txt and output the tenth line to stdout. awk 'NR==10' file.txt head & tail \u00b6 \u4f7f\u7528 head \u548c tail \u4e5f\u662f\u5f88\u591a\u4eba\u7684\u89e3\u9898\u601d\u8def\u4e4b\u4e00\uff0c\u6211\u4e5f\u4e00\u6837\uff0c\u56e0\u4e3a\u901a\u8fc7 head \u622a\u53d6\u524d10\u884c\uff0c\u518d\u7528 tail \u622a\u53d6\u524d10\u884c\u6700\u540e\u4e00\u884c\u5c31\u662f\u6240\u9700\u7684\u4e86 # Read from the file file.txt and output the tenth line to stdout. head -10 file.txt | tail -1 \u89e3\u7b54\u9519\u8bef \u4f7f\u7528 tail \u548c head \u5728\u6587\u4ef6\u884c\u6570\u5927\u7b49\u4e8e10\u65f6\u6b63\u5e38\uff0c\u4f46\u662f\uff01\u5982\u679c\u4e0d\u8db310\u884c\u5c06\u8fd4\u56de\u6700\u540e\u4e00\u884c\u6570\u636e\uff0c\u800c\u975e\u7a7a\uff0c\u6240\u4ee5\u89e3\u9898\u5931\u8d25 \u5c0f\u7ed3 \u00b6 \u5bf9\u5e94\u6587\u672c\u5904\u7406\uff0c\u975e grep , sed , awk \u4e09\u5251\u5ba2\u83ab\u5c5e\uff0c\u5728\u8fd9\u91cc\u53ea\u662f\u5c0f\u8bd5\u725b\u5200\u3002","title":"195.\u7b2c\u5341\u884c"},{"location":"shell/195.tenth-line/#_1","text":"\u96be\u5ea6 \uff1a\u7b80\u5355 \u94fe\u63a5 \uff1a https://leetcode-cn.com/problems/tenth-line","title":"\u7b2c\u5341\u884c"},{"location":"shell/195.tenth-line/#_2","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6587\u672c\u6587\u4ef6 file.txt\uff0c\u8bf7\u53ea\u6253\u5370\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u7684\u7b2c\u5341\u884c\u3002 \u793a\u4f8b \u8f93\u5165 : file.txt Line 1 Line 2 Line 3 Line 4 Line 5 Line 6 Line 7 Line 8 Line 9 Line 10 \u8f93\u51fa : \u6253\u5370\u7b2c10\u884c Line 10","title":"\u63cf\u8ff0"},{"location":"shell/195.tenth-line/#_3","text":"\u8fd9\u9053\u9898\u975e\u5e38\u7b80\u5355\uff0c\u4f7f\u7528\u5f88\u591a\u65b9\u6cd5\u90fd\u53ef\u4ee5\u89e3\u51b3\uff0c\u4e0b\u9762\u4ecb\u7ecd\u51e0\u79cd\u5e38\u7528\u65b9\u6cd5\u3002","title":"\u9898\u89e3"},{"location":"shell/195.tenth-line/#sed","text":"\u6211\u7684\u7b2c\u4e00\u4e2a\u63d0\u4ea4\u4f7f\u7528\u7684\u662f sed # Read from the file file.txt and output the tenth line to stdout. sed -n 10p file.txt -n \u8868\u793a\u53ea\u6253\u5370\u5339\u914d\u4fe1\u606f\uff0c 10p \u8868\u793a\u7b2c10\u884c\u3002","title":"sed"},{"location":"shell/195.tenth-line/#awk","text":"\u4f7f\u7528 awk \u4e5f\u5f88\u5feb\u6377\uff0cNR - The total number of input records seen so far, \u5bf9\u5e94\u7684\u662f\u8f93\u5165\u6570\u636e\u7684\u7b2cN\u6761\u6570\u636e\uff0c\u89e3\u9898\u5982\u4e0b # Read from the file file.txt and output the tenth line to stdout. awk 'NR==10' file.txt","title":"awk"},{"location":"shell/195.tenth-line/#head-tail","text":"\u4f7f\u7528 head \u548c tail \u4e5f\u662f\u5f88\u591a\u4eba\u7684\u89e3\u9898\u601d\u8def\u4e4b\u4e00\uff0c\u6211\u4e5f\u4e00\u6837\uff0c\u56e0\u4e3a\u901a\u8fc7 head \u622a\u53d6\u524d10\u884c\uff0c\u518d\u7528 tail \u622a\u53d6\u524d10\u884c\u6700\u540e\u4e00\u884c\u5c31\u662f\u6240\u9700\u7684\u4e86 # Read from the file file.txt and output the tenth line to stdout. head -10 file.txt | tail -1 \u89e3\u7b54\u9519\u8bef \u4f7f\u7528 tail \u548c head \u5728\u6587\u4ef6\u884c\u6570\u5927\u7b49\u4e8e10\u65f6\u6b63\u5e38\uff0c\u4f46\u662f\uff01\u5982\u679c\u4e0d\u8db310\u884c\u5c06\u8fd4\u56de\u6700\u540e\u4e00\u884c\u6570\u636e\uff0c\u800c\u975e\u7a7a\uff0c\u6240\u4ee5\u89e3\u9898\u5931\u8d25","title":"head &amp; tail"},{"location":"shell/195.tenth-line/#_4","text":"\u5bf9\u5e94\u6587\u672c\u5904\u7406\uff0c\u975e grep , sed , awk \u4e09\u5251\u5ba2\u83ab\u5c5e\uff0c\u5728\u8fd9\u91cc\u53ea\u662f\u5c0f\u8bd5\u725b\u5200\u3002","title":"\u5c0f\u7ed3"}]}